import asyncio
from threading import Thread


from aiogram import  types


from config.conf_bot import dp
from crud.user import (
                        get_bool_trade,
                        get_bool_trade_trhread,
                        add_deal_trade,
                    )
from .thread import thread_function
from .services import get_buton_adds, get_buton_interval



@dp.message_handler()
async def echo_all(message:types.Message):
    """
    –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫
    –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º -–º–æ–∏ —Å–¥–µ–ª–∫–∏ –∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É.
    –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–µ —Å–¥–µ–ª–∫–∏ ,–µ—Å–ª–∏ –æ–Ω–∏ –∏–º–µ—é—Ç—Å—è
    –∏–ª–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É –≤—ã–≤–æ–¥–∏—Ç 
    (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø—Ä–æ—Ü–µ—Å–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞)
    –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü—Ü–µ—Å –ø–æ–∏—Å–∫–∞ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞,
    –ø—Ä–∏ –µ–≥–æ –æ—Ç—Å—É—Ç–≤–∏–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–º –¥–ª—è –ø–æ—Å–∫–∞ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
    """
    otmena_button = types.InlineKeyboardButton(
                text='–û—Ç–º–µ–Ω–∏—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å',
                callback_data="–æ—Ç–º–µ–Ω–∞"
                )
    if message.text == '–ú–æ–∏ —Å–¥–µ–ª–∫–∏ üí∏':
        otmena ,mess = await get_bool_trade(
                str(message.chat.id)
                )
        if otmena:
            markup = types.InlineKeyboardMarkup()
            markup.add(otmena_button)
            await message.answer(mess,reply_markup=markup, parse_mode='html')
        else:
            await message.answer(mess)
    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É üí±':
        if await get_bool_trade_trhread(
                    str(message.chat.id)
                    ):
            markup = types.InlineKeyboardMarkup()
            markup.add(otmena_button )
            await message.answer(
                f'–£ –≤–∞—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å ,–Ω–æ —Å–¥–µ–ª–∫–∏ –µ—â–µ –Ω–µ—Ç',
                reply_markup=markup,
                parse_mode='html'
                )
        else:
            markup = types.InlineKeyboardMarkup()
            btn_5m = types.InlineKeyboardButton(
                text='5m',
                callback_data="5m"
                )
            btn_15m = types.InlineKeyboardButton(
                text='15m',
                callback_data="15m"
                )
            btn_30m = types.InlineKeyboardButton(
                text='30m',
                callback_data="30m"
                )
            btn_1h = types.InlineKeyboardButton(
                text='1h',
                callback_data="1h"
                )
            btn_4h = types.InlineKeyboardButton(
                text='4h',
                callback_data="4h"
                )
            markup.add(
                btn_5m,btn_15m,btn_30m,btn_1h,btn_4h
                )
            await message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –±–∞—Ä–æ–≤ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏.",
                reply_markup = markup)




@dp.callback_query_handler()
async def callback_inline(call:types.CallbackQuery):
    """
    –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    """
    if call.data in [
        '5m',
        '15m',
        '30m',
        '1h',
        '4h',
        '1h',
        ]:
        await get_buton_interval(call)

    if call.data in [
        "1",
        "2",
        "chrusdt",
        "dashusdt",
        "btcusdt",
        "keepusdt",
        "ethusdt",
        "icpusdt",
        "blzusdt"
        ]:
        markup = await get_buton_adds(call)

    if call.data == "yes" :
        try:
            interval,symbol = await add_deal_trade(
                str(call["from"]["id"]),
                deal_t=True
                )
            user_id = str(call["from"]["id"])
            trade = Thread(
                target=thread_function,
                args=(symbol,interval,user_id,)
                )
            trade.start()
            await call.message.answer("–ó–∞–ø—É—â–µ–Ω–æ")
        except:
            await call.message.answer(
                "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫,–ø–æ—Ä–æ–±—É–π—Ç–µ –µ—â —Ä–∞–∑!"
                )

    if call.data == "no" :
        await call.message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")
    if call.data == "–æ—Ç–º–µ–Ω–∞" :
        await add_deal_trade(
            str(call["from"]["id"]),deal_t=False
            )
        await call.message.answer("–£—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ!")